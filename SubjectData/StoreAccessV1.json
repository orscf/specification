{
  "openapi": "3.0.1",
  "info": {
    "title": "ORSCF SubjectData-StoreAccess",
    "description": "NOTE: This is not intended be a 'RESTful' api, as it is NOT located on the persistence layer and is therefore NOT focused on doing CRUD operations! This HTTP-based API uses a 'call-based' approach to known BL operations. IN-, OUT- and return-arguments are transmitted using request-/response- wrappers (see [UJMW](https://github.com/KornSW/UnifiedJsonMessageWrapper)), which are very lightweight and are a compromise for broad support and adaptability in REST-inspired technologies as well as soap-inspired technologies!",
    "contact": {
      "name": "Open Research Study Communication Format",
      "url": "https://orscf.org",
      "email": "info@orscf.org"
    },
    "version": "1.7.0"
  },
  "servers": [
    {
      "url": "/showcase/sdr"
    }
  ],
  "paths": {
    "/store/subjects/getSubjectBySubjectUid": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.",
        "description": "Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.",
        "operationId": "GetSubjectBySubjectUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectBySubjectUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectBySubjectUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectBySubjectUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectBySubjectUidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/getSubjects": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Loads Subjects.",
        "description": "Loads Subjects.",
        "operationId": "GetSubjects",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/searchSubjects": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Loads Subjects where values matching to the given filterExpression",
        "description": "Loads Subjects where values matching to the given filterExpression",
        "operationId": "SearchSubjects",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSubjectsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/addNewSubject": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Adds a new Subject and returns its primary identifier (or null on failure).",
        "description": "Adds a new Subject and returns its primary identifier (or null on failure).",
        "operationId": "AddNewSubject",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/updateSubject": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "UpdateSubject",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/updateSubjectBySubjectUid": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "UpdateSubjectBySubjectUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectBySubjectUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectBySubjectUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectBySubjectUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubjectBySubjectUidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjects/deleteSubjectBySubjectUid": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "summary": "Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "DeleteSubjectBySubjectUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectBySubjectUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectBySubjectUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectBySubjectUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubjectBySubjectUidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/getSubjectSiteAssignmentBySubjectSiteAssignmentUid": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.",
        "description": "Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.",
        "operationId": "GetSubjectSiteAssignmentBySubjectSiteAssignmentUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/getSubjectSiteAssignments": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Loads SubjectSiteAssignments.",
        "description": "Loads SubjectSiteAssignments.",
        "operationId": "GetSubjectSiteAssignments",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubjectSiteAssignmentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectSiteAssignmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/searchSubjectSiteAssignments": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Loads SubjectSiteAssignments where values matching to the given filterExpression",
        "description": "Loads SubjectSiteAssignments where values matching to the given filterExpression",
        "operationId": "SearchSubjectSiteAssignments",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectSiteAssignmentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectSiteAssignmentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubjectSiteAssignmentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSubjectSiteAssignmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/addNewSubjectSiteAssignment": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure).",
        "description": "Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure).",
        "operationId": "AddNewSubjectSiteAssignment",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectSiteAssignmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectSiteAssignmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSubjectSiteAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewSubjectSiteAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/updateSubjectSiteAssignment": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "UpdateSubjectSiteAssignment",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/updateSubjectSiteAssignmentBySubjectSiteAssignmentUid": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store/subjectSiteAssignments/deleteSubjectSiteAssignmentBySubjectSiteAssignmentUid": {
      "post": {
        "tags": [
          "SubjectSiteAssignments"
        ],
        "summary": "Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "description": "Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.",
        "operationId": "DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid",
        "requestBody": {
          "description": "request capsule containing the method arguments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetSubjectBySubjectUidRequest": {
        "required": [
          "subjectUid"
        ],
        "type": "object",
        "properties": {
          "subjectUid": {
            "type": "string",
            "description": "Required Argument for 'GetSubjectBySubjectUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'GetSubjectBySubjectUid'.\r\nMethod: Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity."
      },
      "Subject": {
        "required": [
          "actualSiteIdentifier",
          "enrollingSiteIdentifier",
          "researchStudyUid",
          "status",
          "subjectUid"
        ],
        "type": "object",
        "properties": {
          "subjectUid": {
            "type": "string",
            "description": "An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          },
          "actualSiteIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "enrollingSiteIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "enrollmentDate": {
            "type": "string",
            "description": "*this field is optional",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "*this field is optional",
            "format": "date-time",
            "nullable": true
          },
          "terminatedReason": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "subjectIdentifier": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "AS DECLARED BY <see href=\"https://www.hl7.org/fhir/valueset-research-subject-status.html\">HL7.ResearchSubjectStatus</see>:\r\n           candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn"
          },
          "researchStudyUid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "entity, which relates to <see href=\"https://www.hl7.org/fhir/researchsubject.html\">HL7.ResearchSubject</see>"
      },
      "GetSubjectBySubjectUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/Subject"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'GetSubjectBySubjectUid'.\r\nMethod: Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity."
      },
      "GetSubjectsRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Optional Argument for 'GetSubjects' (Int32?): Number of the page, which should be returned",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Optional Argument for 'GetSubjects' (Int32?): Max count of Subjects which should be returned",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'GetSubjects'.\r\nMethod: Loads Subjects."
      },
      "GetSubjectsResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            },
            "description": "Return-Value of 'GetSubjects' (Subject[]): entity, which relates to <see href=\"https://www.hl7.org/fhir/researchsubject.html\">HL7.ResearchSubject</see>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'GetSubjects'.\r\nMethod: Loads Subjects."
      },
      "SearchSubjectsRequest": {
        "required": [
          "filterExpression"
        ],
        "type": "object",
        "properties": {
          "filterExpression": {
            "type": "string",
            "description": "Required Argument for 'SearchSubjects' (string): a filter expression like '((FieldName1 == \"ABC\" && FieldName2 > 12) || FieldName2 != \"\")'"
          },
          "sortingExpression": {
            "type": "string",
            "description": "Optional Argument for 'SearchSubjects' (string): one or more property names which are used as sort order (before pagination)",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Optional Argument for 'SearchSubjects' (Int32?): Number of the page, which should be returned",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Optional Argument for 'SearchSubjects' (Int32?): Max count of Subjects which should be returned",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'SearchSubjects'.\r\nMethod: Loads Subjects where values matching to the given filterExpression"
      },
      "SearchSubjectsResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subject"
            },
            "description": "Return-Value of 'SearchSubjects' (Subject[]): entity, which relates to <see href=\"https://www.hl7.org/fhir/researchsubject.html\">HL7.ResearchSubject</see>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'SearchSubjects'.\r\nMethod: Loads Subjects where values matching to the given filterExpression"
      },
      "AddNewSubjectRequest": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/Subject"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'AddNewSubject'.\r\nMethod: Adds a new Subject and returns its primary identifier (or null on failure)."
      },
      "AddNewSubjectResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'AddNewSubject' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'AddNewSubject'.\r\nMethod: Adds a new Subject and returns its primary identifier (or null on failure)."
      },
      "UpdateSubjectRequest": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/Subject"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'UpdateSubject'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'UpdateSubject' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'UpdateSubject'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectBySubjectUidRequest": {
        "required": [
          "subject",
          "subjectUid"
        ],
        "type": "object",
        "properties": {
          "subjectUid": {
            "type": "string",
            "description": "Required Argument for 'UpdateSubjectBySubjectUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          },
          "subject": {
            "$ref": "#/components/schemas/Subject"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'UpdateSubjectBySubjectUid'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectBySubjectUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'UpdateSubjectBySubjectUid' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'UpdateSubjectBySubjectUid'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "DeleteSubjectBySubjectUidRequest": {
        "required": [
          "subjectUid"
        ],
        "type": "object",
        "properties": {
          "subjectUid": {
            "type": "string",
            "description": "Required Argument for 'DeleteSubjectBySubjectUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'DeleteSubjectBySubjectUid'.\r\nMethod: Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "DeleteSubjectBySubjectUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'DeleteSubjectBySubjectUid' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'DeleteSubjectBySubjectUid'.\r\nMethod: Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "GetSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest": {
        "required": [
          "subjectSiteAssignmentUid"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignmentUid": {
            "type": "string",
            "description": "Required Argument for 'GetSubjectSiteAssignmentBySubjectSiteAssignmentUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'GetSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity."
      },
      "SubjectSiteAssignment": {
        "required": [
          "siteUid",
          "subjectSiteAssignmentUid",
          "subjectUid",
          "validFrom"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignmentUid": {
            "type": "string",
            "description": "An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "siteUid": {
            "type": "string",
            "description": "<see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> of the target Site",
            "format": "uuid"
          },
          "subjectUid": {
            "type": "string",
            "description": "<see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> of the target Subject",
            "format": "uuid"
          },
          "siteRelatedPatientIdentifier": {
            "type": "string",
            "description": "This can be the ID ('surrogate-key') of the Partient record within a site specific patient management system. This MUST NOT be any natural key or plain readable name which exposes the identity of the patient! *this field is optional (use null as value)",
            "nullable": true
          },
          "byInvolvedPersonUid": {
            "type": "string",
            "description": "*this field is optional",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectSiteAssignment"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'GetSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity."
      },
      "GetSubjectSiteAssignmentsRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Optional Argument for 'GetSubjectSiteAssignments' (Int32?): Number of the page, which should be returned",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Optional Argument for 'GetSubjectSiteAssignments' (Int32?): Max count of SubjectSiteAssignments which should be returned",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'GetSubjectSiteAssignments'.\r\nMethod: Loads SubjectSiteAssignments."
      },
      "GetSubjectSiteAssignmentsResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectSiteAssignment"
            },
            "description": "Return-Value of 'GetSubjectSiteAssignments' (SubjectSiteAssignment[])",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'GetSubjectSiteAssignments'.\r\nMethod: Loads SubjectSiteAssignments."
      },
      "SearchSubjectSiteAssignmentsRequest": {
        "required": [
          "filterExpression"
        ],
        "type": "object",
        "properties": {
          "filterExpression": {
            "type": "string",
            "description": "Required Argument for 'SearchSubjectSiteAssignments' (string): a filter expression like '((FieldName1 == \"ABC\" && FieldName2 > 12) || FieldName2 != \"\")'"
          },
          "sortingExpression": {
            "type": "string",
            "description": "Optional Argument for 'SearchSubjectSiteAssignments' (string): one or more property names which are used as sort order (before pagination)",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Optional Argument for 'SearchSubjectSiteAssignments' (Int32?): Number of the page, which should be returned",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Optional Argument for 'SearchSubjectSiteAssignments' (Int32?): Max count of SubjectSiteAssignments which should be returned",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'SearchSubjectSiteAssignments'.\r\nMethod: Loads SubjectSiteAssignments where values matching to the given filterExpression"
      },
      "SearchSubjectSiteAssignmentsResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectSiteAssignment"
            },
            "description": "Return-Value of 'SearchSubjectSiteAssignments' (SubjectSiteAssignment[])",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'SearchSubjectSiteAssignments'.\r\nMethod: Loads SubjectSiteAssignments where values matching to the given filterExpression"
      },
      "AddNewSubjectSiteAssignmentRequest": {
        "required": [
          "subjectSiteAssignment"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignment": {
            "$ref": "#/components/schemas/SubjectSiteAssignment"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'AddNewSubjectSiteAssignment'.\r\nMethod: Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure)."
      },
      "AddNewSubjectSiteAssignmentResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'AddNewSubjectSiteAssignment' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'AddNewSubjectSiteAssignment'.\r\nMethod: Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure)."
      },
      "UpdateSubjectSiteAssignmentRequest": {
        "required": [
          "subjectSiteAssignment"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignment": {
            "$ref": "#/components/schemas/SubjectSiteAssignment"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'UpdateSubjectSiteAssignment'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectSiteAssignmentResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'UpdateSubjectSiteAssignment' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'UpdateSubjectSiteAssignment'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest": {
        "required": [
          "subjectSiteAssignment",
          "subjectSiteAssignmentUid"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignmentUid": {
            "type": "string",
            "description": "Required Argument for 'UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          },
          "subjectSiteAssignment": {
            "$ref": "#/components/schemas/SubjectSiteAssignment"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Updates all values (which are not \"FixedAfterCreation\") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidRequest": {
        "required": [
          "subjectSiteAssignmentUid"
        ],
        "type": "object",
        "properties": {
          "subjectSiteAssignmentUid": {
            "type": "string",
            "description": "Required Argument for 'DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid' (Guid): An <see href=\"https://de.wikipedia.org/wiki/Universally_Unique_Identifier\">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Contains arguments for calling 'DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      },
      "DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "string",
            "description": "This field contains error text equivalent to an Exception message! (note that only 'fault' XOR 'return' can have a value != null)",
            "nullable": true
          },
          "return": {
            "type": "boolean",
            "description": "Return-Value of 'DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid' (Boolean)"
          }
        },
        "additionalProperties": false,
        "description": "Contains results from calling 'DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid'.\r\nMethod: Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}